# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

$script = <<SCRIPT
  sed -i -- 's|hadoop-01|hadoop-04|g' /etc/sysconfig/network && \
  sed -i -- 's|hadoop-01|hadoop-04|g' /etc/hostname && \
  hostname hadoop-04 && \
  hostnamectl set-hostname "hadoop-04" && \
  yum install -y nc && \
  systemctl stop firewalld && \
  systemctl disable firewalld && \
  command cp -rf /vagrant/cfg/hadoop /opt/hadoop/etc/ && \
  cd /opt && \
  tar xzf /vagrant/hbase-1.4.1-bin.tar.gz && \
  mv hbase-1.4.1 hbase && \
  echo "" >> /etc/profile && \
  echo "export HBASE_HOME=/opt/hbase" >> /etc/profile && \
  source /etc/profile && \
  echo "export PATH=${PATH}:${HBASE_HOME}/bin" >> /etc/profile && \
  echo "export HBASE_REGIONSERVERS=${HBASE_HOME}/conf/regionservers" >> /etc/profile && \
  echo "export HBASE_MANAGES_ZK=false" >> /etc/profile && \
  source /etc/profile && \
  command cp -f /vagrant/systemctl/root/st*.sh /opt/ && \
  command cp -f /vagrant/cfg/hosts/hosts-iphone /etc/hosts && \
  cd /opt/ && tar xzf /vagrant/apache-phoenix-4.13.1-HBase-1.3-bin.tar.gz && mv apache-phoenix-4.13.1-HBase-1.3-bin phoenix && \
  command cp -f /vagrant/cfg/hbase/* /opt/hbase/conf/ && \
  command cp -f /vagrant/cfg/phoenix/hbase-site.xml /opt/phoenix/bin/ && \
  command cp -f /opt/phoenix/phoenix-4.13.1-HBase-1.3-server.jar /opt/hbase/lib
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # copied directly from vagrant init chef/centos-6.5
  config.vm.box = "hadoop-base"
  
  config.vm.box_check_update = false
  # config.vbguest.auto_update = false
  config.vbguest.auto_update = true
  
  # workaround the vagrant 1.8.5 bug
  config.ssh.insert_key = false

  config.vm.synced_folder ".", "/vagrant", type: "virtualbox"

  # change memory size
  config.vm.provider "virtualbox" do |v|
    v.customize ['modifyvm', :id, '--memory', '1024', '--cpus', '1', '--cableconnected1', 'on']
    v.name = "hadoop-04"
  end

  # Oracle port forwarding
  #config.vm.network "public_network", bridge: "en5: Thunderbolt Ethernet", use_dhcp_assigned_default_route: true
  # config.vm.network "public_network", bridge: "en0: Wi-Fi (AirPort)", ip: "192.168.0.13", use_dhcp_assigned_default_route: true
  config.vm.network "public_network", bridge: "en0: Wi-Fi (AirPort)", ip: "172.20.10.7", use_dhcp_assigned_default_route: true
  # config.vm.network "public_network", bridge: "en0: Wi-Fi (AirPort)", use_dhcp_assigned_default_route: true
  # config.vm.network "forwarded_port", guest: 9870, host: 9870, auto_correct: true

  config.vm.provision "shell", inline: $script

  # Provision everything on the first run
  # config.vm.provision "shell", path: "scripts/install.sh"

  # if Vagrant.has_plugin?("vagrant-proxyconf")
  #   config.proxy.http     = "http://proxy.example.com/"
  #   config.proxy.https    = "http://proxy.example.com/"
  #   config.proxy.no_proxy = "localhost,127.0.0.1"
  # end
end
